create database kodilla_course;
show databases;
create user 'kodilla_user' identified with MYSQL_NATIVE_PASSWORD by 'kodilla_Pass123';
GRANT ALL PRIVILEGES ON kodilla_course.* to kodilla_user;
show TABLES;
CREATE TABLE USERS
(
    ID SERIAL PRIMARY KEY,
    FIRSTNAME VARCHAR(100),
    LASTNAME VARCHAR(100)
);
CREATE TABLE POSTS
(
    ID SERIAL PRIMARY KEY,
    USER_ID BIGINT UNSIGNED NOT NULL,
    BODY VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);
SELECT * FROM USERS;
INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ('John', 'Smith');
COMMIT;
INSERT INTO POSTS (USER_ID, BODY) VALUES (1, 'This is my first post on this forum!');

COMMIT;

SELECT * FROM POSTS;
INSERT INTO POSTS (USER_ID, BODY) VALUES (2, 'This is my first post too!');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Zachary', 'Lee');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Thomas', 'Landgren');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Yo all! Here is Thomas!');

COMMIT;

SELECT * FROM USERS;
SELECT * FROM POSTS;

CREATE TABLE ISSUESLISTS
(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100)
);

CREATE TABLE ISSUES
(
    ID SERIAL PRIMARY KEY,
    ISSUESLISTS_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(1024),
    DESCRIPTION VARCHAR(1024),
    FOREIGN KEY (ISSUESLISTS_ID) REFERENCES ISSUES(ID)
);
COMMIT;
INSERT INTO ISSUESLISTS (NAME)
VALUES('ToDo');

INSERT INTO ISSUESLISTS (NAME)
VALUES('In progress');

INSERT INTO ISSUESLISTS (NAME)
VALUES('Done');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'Shopping Monday', 'My list: cheese, bread, juice');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'Shopping Tuesday', 'My list: beer, ham, pizza');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'Shopping Wednesday', 'My list: bananas, oil, bread');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'Shopping Thursday', 'My list: hamburger, donat, soda');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'Shopping Friday', 'My list: cola, tomato, chips');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Cleaning the house', 'Cleaning my room');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Cleaning the house', 'Cleaning the kitchen');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Cleaning the house', 'Cleaning the bathroom');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Garden work', 'Mowing the grass');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Garden work', 'Planting flowers');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Garden work', 'Washing the car');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Garden work', 'Construction of an arbor');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Cleaning the house', 'Clean the garage');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Cleaning the house', 'Clean the attic');

INSERT INTO ISSUES(ISSUESLISTS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Shopping Saturday', 'My list: plants, fuel');

COMMIT;

SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;

SELECT I.SUMMARY, I.DESCRIPTION, I2.NAME
FROM ISSUES I
JOIN ISSUESLISTS I2 ON I2.ID = I.ISSUESLISTS_ID;
COMMIT;

SELECT U.FIRSTNAME, U.LASTNAME, I.SUMMARY, I.DESCRIPTION
FROM USERS U
JOIN ISSUES I ON I.ISSUESLISTS_ID = U.ID;

COMMIT;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS ISSUES_NUMBER
FROM USERS U JOIN ISSUES I ON I.ISSUESLISTS_ID = U.ID
GROUP BY I.ISSUESLISTS_ID;

COMMIT ;

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my second post');

COMMIT;
SELECT * FROM POSTS;

UPDATE POSTS
SET BODY = 'TO DELETE'
WHERE ID = 7;

COMMIT;

SELECT * FROM POSTS;

DELETE FROM POSTS
WHERE ID = 7;

COMMIT;

SELECT * FROM POSTS;